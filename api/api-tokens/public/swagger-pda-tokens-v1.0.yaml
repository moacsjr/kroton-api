swagger: '2.0'
################################################################################
#                              Informações da API                              #
################################################################################
info:
  version: '1.0'
  title: PDA - API REST para Autenticação de usuários
  description: |
    A primeira versão da API de Autenticação no PDA da Kroton foi desenhada com o objetivo de prover segurança e agilidade, criando um ponto único de acesso (single sign-on) para liberação de acesso aos atuais e futuros sistemas da empresa.
    
    Utilizando o conceito de JSON Web token, o cliente deve solicitar uma autenticação para API e receberá um Token único e temporário para acesso aos outros serviços credenciados.
    
    Para agilizar apresentação dos dados ao usuário, a API retornará informações importantes do usuário, criptografadas junto ao JWT gerado.
    
    Exemplo de estrutura de resposta
    
    
    ## Meta
    
    A estrutura de metadados retornados é composta pelos itens abaixo
    
    # apiVersion
    
    Dado um número de versão da API, o padrão gerado segue a sequencia MAJOR.MINOR.PATCH
    
    MAJOR = Versão principal, quando são feitas mudanças na API tornadoa incompatível
    MINOR = Versão secundária, quando são feitas mudanças na funcionalidade de uma forma compatível com versões anteriores.
    PATCH = Versão do patch, quando são feitas correções de bugs compátiveis.
    
    # transactionId
    
    A cada chamada para API o sistema gera uma identificação para a transação sendo realizada, para otimizar a rastreabilidade sistemica, a API retornada essa identificação.
    
    # Exemplo Meta
    
    
    ```JSON
    {
        "meta": {
            "apiVersion": "1.0.300",
            "transactionId": 400
        }
    }
    ```
    
    ## Data
    
    A estrutura de Data é onde encontram-se as informações de payload da resposta, para essa API,  os dados serão retornados  da seguinte forma
    
    # Type
    
    Define o tipo de autenticação que a API está realizando
    
    # Properties
    
    Define as propriedades que serão retornadas no payload da autenticação JWT. Para essa API serão retornadas as informações do Model Usuário
  
    
    # Exemplo Data
    
     ```JSON
    {
        "data": {
            "type": JWT,
            "properties": [{
                usuario: {
                  ... <<Model Usuario>>
                }
              }]
        }
    }
    ```
    ## Erros
    
    A estrutura de Errors é onde encontram-se as informações de possíveis erros da resposta, para essa API,  os dados serão retornados  da seguinte forma
    
    # Code
    
    Código de negócio para identificação do erro na aplicação
    
    # Title
    
    Mensagem resumida do erro ocorrido na aplicação
    
    # Detail
    
    Detalhes do erro ocorrido na aplicação
    
    # Links
    
    Links para acesso a páginas de referencia para rastreabilidade da causa.
    
    # Exemplo Errors
    
     ```JSON
    {
        "errors": {
            "code": PDA-99,
            "title": Ocorreu um erro ao obter o endereço do usuário
            "detail": transaction.internal.TimedOutException: Transaction timed out after 33 seconds ...
            "links": https://portal.pda.kroton.com.br
        }
    }
    ```

basePath: /1.0
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
################################################################################
#                                           Paths                              #
################################################################################
paths:
  /tokens:
    post:
      summary: Retorna informações do usuário autenticado nos sistemas da Kroton
      description: Serviço responsável pela autenticação de usuários. Os parametro para autenticação são CPF ou E-Mail e Senha
      tags:
        - Tokens
      parameters:
        - in: body
          name: body
          description: Informações necessarias para autenticação do usuário
          required: true
          schema:
            $ref: "#/definitions/autenticacao"
      responses:
        '200':
          description: JSON contendo os dados retornados pela API em caso de sucesso.
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              data:
                type: object
                properties:
                  jwt:
                    type: string
                  type:
                    type: string
                  attributes:
                    type: object
                    properties:
                      usuarios:
                        type: array
                        items:
                          $ref: '#/definitions/usuario'
                    
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
        '404':
          description: Not Found
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
        '405':
          description: Method  Not Allowed
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
        '406':
          description: Not Acceptable
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
        '429':
          description: Too Many Requests
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
        '500':
          description: Erro inesperado no servidor
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
        '503':
          description: Service unavailable
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta'
              errors:
                $ref: '#/definitions/error'
################################################################################
#                                           Models                            #
################################################################################
definitions:
  autenticacao:
    type: object
    properties:
      cpf:
        description: CPF do usuario para autenticação, obrigatório caso RA e E-Mail não sejam informados
        type: string
      email:
        description: Email no Office 365 do usuário para autenticação,  obrigatório caso RA e CPF não sejam informados
        type: string
      senha:
        description: senha do usuario para autenticação. Base64 Encode
        type: string

################################################################################
#                 Representação de retorno no token JWT                        #     
################################################################################
  usuario:
    description: Representação dos dados do Usuário, que serão retornados nos response da API
    title: usuario
    type: object
    properties:
      cpf:
        type: string
      email:
        type: string
      ra:
        type: string
      sistema:
        type: string
      periodoLetivo:
        type: string
      statusFinanceiro:
        $ref: '#/definitions/dominio'
      statusAcademico:
        $ref: '#/definitions/dominio'
      cursos:
        type: array
        items:
          $ref: '#/definitions/curso'
          
  curso:
    description: Representação dos dados de curso
    type: object
    properties:
      id:
        type: string
      codigo:
        type: string
      sistema:
        type: string
      nome:
        type: string
      marca:
        $ref: '#/definitions/dominio'
      modalidade:
        $ref: '#/definitions/dominio'
  meta:
    type: object
    properties:
      apiVersion:
        type: string
        description: Retorna sempre a versão major, minor e patch da API efetivamente consumida. O formato é “versão major;versão minor;patch version”.
      transactionId:
        type: string
        description: Retorna o identificador de rastreabilidade de transação gerado pelo API
        
  error:
    type: object
    description: Objeto retornado na ocorrência de algum erro
    properties:
      code:
        type: string
        description: Codigo de negócio da aplicação
      title:
        type: string
        description: Mensagem de erro resumida
      detail:
        type: string
        description: Mensagem de erro detalhada
      links:
        type: object
        description: Objeto do link para a página com a documentação
          detalhada dos códigos e descrições dos erros.
        properties:
          rel:
            type: string
          href:
            type: string
  dominio:
    type: object
    properties:
      codigo:
        type: string
      descricao:
        type: string